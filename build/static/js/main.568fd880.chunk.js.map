{"version":3,"sources":["App.jsx","index.js"],"names":["dusts","distance","coord1","coord2","a","unit","split","lat1","lon1","lat2","lon2","parseFloat","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","url","questUrl","fetch","res","console","log","json","sortQuests","quests","error","alert","window","location","pop","list","index","popped","temp","length","i","Error","done","filter","coord","chose","obj","lat","lng","at","elemDist","indexOf","questCreateGpx","coords","stringFile","forEach","then","statusText","html","text","GetQuest","props","handleGetQuest","state","quest","fetchQuest","final","includes","conditions_string","fileDownload","Blob","fileDownloadUrl","handleSelectCity","bind","handleSelectQuest","e","debug","target","value","this","setState","className","name","onChange","hidden","urls","map","style","fontFamily","rewards","label","category","j","literal","reward","onClick","React","Component","ConvertToGpx","inputText","handleFormSubmit","parseCoords","lon","blob","createGpx","URL","createObjectURL","dofileDownload","click","revokeObjectURL","matchAll","preventDefault","downloadFile","onSubmit","type","display","download","href","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.568fd880.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { rewards, urls } from \"./bundle.json\";\n\nimport fileDownload from \"js-file-download\";\n\nlet dusts = [\"Make 3 Great Throws in a row\", \"Make 2 Nice Curveball Throws in a row\", \"Make 5 Nice Throws\", \"Make 3 Great Throws\", \"Make 3 Nice Throws in a row\", \"Make an Excellent Throw\", \"\"]\n\n\n\nfetch(\"https://cors-anywhere.herokuapp.com/\")\n.then(res => {\n  if(res.statusText===\"Forbidden\") {\n    alert(\"Activate demo server!\")\n    window.location = \"https://cors-anywhere.herokuapp.com/corsdemo\"\n\n    // fetch(\"https://cors-anywhere.herokuapp.com/corsdemo?accessRequest=abd73549d263ddcfa148b38acd13f2a461bd324beeea0113124dead9edb6bcc1\", {\n      // method: \"GET\",\n      // referrer: \"https://cors-anywhere.herokuapp.com/corsdemo\",\n      // mode: \"no-cors\"\n\n    // })\n    .then(html => html.text())\n    // .then(html => {\n    //   let test = DOMParser.parseFromString(html)\n    //   console.log(test)\n\n\n    // })\n  }\n})\n\nasync function distance(coord1, coord2, unit = \"K\") {\n  let [lat1, lon1] = coord1.split(\",\");\n  let [lat2, lon2] = coord2.split(\",\");\n  lat1 = parseFloat(lat1);\n  lon1 = parseFloat(lon1);\n  lat2 = parseFloat(lat2);\n  lon2 = parseFloat(lon2);\n\n  if (lat1 === lat2 && lon1 === lon2) {\n    return 0;\n  } else {\n    var radlat1 = (Math.PI * lat1) / 180;\n    var radlat2 = (Math.PI * lat2) / 180;\n    var theta = lon1 - lon2;\n    var radtheta = (Math.PI * theta) / 180;\n    var dist =\n      Math.sin(radlat1) * Math.sin(radlat2) +\n      Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n    if (dist > 1) {\n      dist = 1;\n    }\n    dist = Math.acos(dist);\n    dist = (dist * 180) / Math.PI;\n    dist = dist * 60 * 1.1515;\n    if (unit === \"K\") {\n      dist = dist * 1.609344;\n    }\n    if (unit === \"N\") {\n      dist = dist * 0.8684;\n    }\n    return dist;\n  }\n}\n\nasync function fetchQuest(url, questUrl) {\n  try {\n    let res = await fetch(\n      \"https://cors-anywhere.herokuapp.com/\" + url + questUrl,\n      { \"x-requested-with\": \"fetch\" }\n    );\n    console.log(res);\n    res = await res.json();\n    return await sortQuests(res.quests);\n  } catch (err) {\n    console.error(err + \" fetchQuest()\");\n    alert(\"Activate demo server!\");\n    window.location = \"https://cors-anywhere.herokuapp.com/corsdemo\";\n  }\n}\n\nasync function sortQuests(quests) {\n  function pop(list, index) {\n    let temp = [];\n    let popped;\n    if (index === -1) {\n      index = list.length - 1;\n    }\n\n    for (let i = 0; i < list.length; i++) {\n      if (i !== index) {\n        temp = [...temp, list[i]];\n      } else {\n        popped = list[i];\n      }\n    }\n    if (!popped)\n      throw new Error(\n        `index not valid. sortQuests.pop() actual length: ${quests.length}, index given: ${index}`\n      );\n    return [temp, popped];\n  }\n\n  if (quests.length === 0) return \"No quests specified. sortQuests()\";\n\n  let done = [];\n  let popped;\n\n  [quests, popped] = pop(quests, 0);\n  done[0] = popped;\n\n  quests = quests.filter((i) => i !== popped);\n\n  let coord = [];\n\n  while (quests.length > 0) {\n    let temp = [{ chose: null }];\n    let dist = 1000000000;\n    let obj = null;\n    for (let i of quests) {\n      let elemDist = await distance(\n        i.lat + \",\" + i.lng,\n        done.at(-1).lat + \",\" + done.at(-1).lng\n      );\n      temp = [...temp, elemDist];\n\n      if (elemDist < dist) {\n        temp[0].chose = elemDist;\n        dist = elemDist;\n        obj = i;\n      }\n    }\n    coord = [...coord, temp];\n\n    [quests, popped] = pop(quests, quests.indexOf(obj));\n    done = [...done, popped];\n  }\n  return done;\n}\n\nfunction questCreateGpx(coords) {\n  let stringFile = \"\";\n  stringFile += '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\\n';\n  stringFile += \"<gpx>\\n\";\n  stringFile += \"<trk>\\n\";\n  stringFile += \"<trkseg>\\n\";\n\n  coords.forEach((i) => {\n    stringFile += `<trkpt lat=\"${parseFloat(i.lat)}\" lon=\"${parseFloat(\n      i.lng\n    )}\"></trkpt>\\n`;\n  });\n\n  stringFile += `</trkseg>\\n`;\n  stringFile += `</trk>\\n`;\n  stringFile += `</gpx>\\n`;\n  return stringFile;\n}\n\n// fetch(\"https://cors-anywhere.herokuapp.com/https://nycpokemap.com/quests.php\", { \"x-requested-with\": \"fetch\" })\n// component\nclass GetQuest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      url: \"\",\n      quest: \"\",\n      fileDownloadUrl: \"\",\n    };\n\n    this.handleSelectCity = this.handleSelectCity.bind(this);\n    this.handleSelectQuest = this.handleSelectQuest.bind(this);\n  }\n\n  componentDidUpdate() {\n    return\n  }\n\n  handleGetQuest = () => {\n    if (this.state.url === \"\" || this.state.quest === \"\") {\n      alert(!this.state.url ? \"Select a city!\" : \"Select a quest type!\");\n    } else {\n\n      fetchQuest(this.state.url, this.state.quest).then((res) => {\n        let final = res;\n        if (\n          [\n            \"quests[]=12%2C0%2C3\",\n            \"quests[]=12%2C0%2C6\",\n            \"quests[]=12%2C0%2C9\",\n            \"quests[]=12%2C0%2C15\",\n            \"quests[]=12%2C0%2C18\",\n          ].includes(this.state.quest)\n        ) {\n\n          final = final.filter(\n            i => i.conditions_string === \"Power up Pokémon 5 times\"\n          );\n        } else if(this.state.quest === \"quests[]=3%2C200%2C0&quests[]=3%2C500%2C0&quests[]=3%2C1000%2C0&quests[]=3%2C1500%2C0\") {\n          final = final.filter(\n            i => dusts.includes(i.conditions_string)\n          )\n        } else if(this.state.quest === \"quests[]=12%2C0%2C80\") {\n          final = final.filter(\n            i => i.conditions_string === \"Use 10 supereffective Charged Attacks\"\n          );\n        }\n        \n        fileDownload(new Blob([questCreateGpx(final)]), \"quest.gpx\");\n      });\n    }\n  };\n\n  handleSelectCity(e, debug=false) {\n    if (debug) {\n      alert(`Selected ${e.target.value}`);\n    }\n\n    this.setState({ url: e.target.value });\n  }\n\n  handleSelectQuest(e, debug=false) {\n    if (debug) {\n      alert(`Selected ${e.target.value}`);\n    }\n\n    this.setState({ quest: e.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"quest-select-container\">\n        {/* Select city */}\n        <select\n          name=\"city-name\"\n          className=\"select-quest city\"\n          value={this.state.url}\n          onChange={this.handleSelectCity}\n        >\n          <option value=\"\" hidden>\n            🏙City🏙\n          </option>\n          {urls.map((i) => {\n            return (\n              <>\n                <option\n                  className=\"option-url\"\n                  value={i.url}\n                  key={urls.indexOf(i)}\n                  style={{ fontFamily: \"sans-serif\" }}\n                >\n                  {i.name}\n                </option>\n              </>\n            );\n          })}\n        </select>\n\n        {/* Select quest */}\n        <select\n          name=\"quest-url\"\n          className=\"select-quest quest\"\n          value={this.state.quest}\n          onChange={this.handleSelectQuest}\n        >\n          <option value=\"\" hidden>\n            🗺️Quest🗺️\n          </option>\n          {rewards.map((i) => {\n            return (\n              <optgroup label={i.category} key={rewards.indexOf(i)}>\n                {i.rewards.map((j) => {\n                  return (\n                    <option\n                      value={j.literal}\n                      key={i.rewards.indexOf(j)}\n                      style={{ fontFamily: \"sans-serif\" }}\n                    >\n                      {j.reward}\n                    </option>\n                  );\n                })}\n              </optgroup>\n            );\n          })}\n        </select>\n        <button className=\"button-quest\" onClick={ this.handleGetQuest }>\n          Get quests\n        </button>\n      </div>\n    );\n  }\n}\n\nclass ConvertToGpx extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { inputText: \"\", fileDownloadUrl: \"\" };\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  createGpx(temp = this.parseCoords(this.state.inputText)) {\n    let stringFile = \"\";\n    stringFile += '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\\n';\n    stringFile += \"<gpx>\\n\";\n    stringFile += \"<trk>\\n\";\n    stringFile += \"<trkseg>\\n\";\n\n    temp.forEach((i) => {\n      let [lat, lon] = i[0].split(\",\");\n\n      stringFile += `<trkpt lat=\"${parseFloat(lat)}\" lon=\"${parseFloat(\n        lon\n      )}\"></trkpt>\\n`;\n    });\n\n    stringFile += `</trkseg>\\n`;\n    stringFile += `</trk>\\n`;\n    stringFile += `</gpx>\\n`;\n    return stringFile;\n  }\n\n  downloadFile() {\n    const blob = new Blob([this.createGpx(this.state.inputText)]); // Step 3\n    const fileDownloadUrl = URL.createObjectURL(blob); // Step 4\n    this.setState(\n      { fileDownloadUrl: fileDownloadUrl }, // Step 5\n      () => {\n        this.dofileDownload.click(); // Step 6\n        URL.revokeObjectURL(fileDownloadUrl); // Step 7\n        this.setState({ fileDownloadUrl: \"\" });\n      }\n    );\n  }\n\n  parseCoords() {\n    const coordRegex = /[0-9]{1,3}\\.[0-9]{3,14},.[0-9]{0,3}\\.[0-9]{3,14}/g;\n    const text = this.state.inputText;\n    return [...text.matchAll(coordRegex)];\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n\n    this.downloadFile();\n  }\n\n  render() {\n    return (\n      <>\n        <form onSubmit={(e) => this.handleFormSubmit(e)} className=\"gpx-form\">\n          <input\n            type=\"text\"\n            value={this.state.inputText}\n            onChange={(e) => {\n              this.setState({ inputText: e.target.value });\n            }}\n          />\n          <input type=\"submit\" value=\"Get .gpx file\" className=\"gpx-submit\" />\n        </form>\n\n        <a\n          style={{ display: \"none\" }}\n          download={\"test.gpx\"}\n          href={this.state.fileDownloadUrl}\n          ref={(e) => (this.dofileDownload = e)}\n        >\n          download it\n        </a>\n      </>\n    );\n  }\n}\n// component\nexport default function App() {\n  /* Functions */\n  // const copyToClipboard = (text) => {\n  //   let textField = document.createElement('textarea')\n  //   textField.innerText = text\n  //   document.body.appendChild(textField)\n  //   textField.select()\n  //   document.execCommand('copy')\n  //   textField.remove()\n  // }\n\n  return (\n    <>\n      <ConvertToGpx />\n      <GetQuest />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}