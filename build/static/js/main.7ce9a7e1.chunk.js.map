{"version":3,"sources":["App.jsx","index.js"],"names":["Coord","lat","lon","this","App","QuestForm","props","state","inputText","coords","handleFormSubmit","bind","stringFile","forEach","i","text","matchAll","e","preventDefault","getCoords","temp","split","lng","setState","document","querySelector","click","onSubmit","type","value","onChange","target","label","filename","exportFile","createGpx","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"uPAIMA,EACJ,WAAYC,EAAKC,GAAM,oBACrBC,KAAKF,IAAMA,EACXE,KAAKD,IAAMA,GAIA,SAASE,IAAM,IAGtBC,EAHsB,kDAI1B,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,UAAW,GAAIC,OAAQ,IAEtC,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBAJP,EAJO,6CAW1B,WACE,IAAIC,EAAa,GAejB,OAdAA,GAAc,4DACdA,GAAc,UACdA,GAAc,UACdA,GAAc,aAEJ,YAAOT,KAAKI,MAAME,QAEvBI,SAAQ,SAACC,GACZF,GAAU,sBAAmBE,EAAEb,IAArB,kBAAkCa,EAAEZ,IAApC,mBAGZU,GAAU,cACVA,GAAU,WACVA,GAAU,aA1Bc,uBA8B1B,WACE,IACMG,EAAOZ,KAAKI,MAAMC,UACxB,OAAO,YAAIO,EAAKC,SAFG,wDA/BK,8BAoC1B,SAAiBC,GACfA,EAAEC,iBAEF,IAAMT,EAASN,KAAKgB,YAChBC,EAAO,GAEXX,EAAOI,SAAQ,SAAAC,GACb,MAAmBA,EAAE,GAAGO,MAAM,KAA9B,mBAAOpB,EAAP,KAAYqB,EAAZ,KACAF,EAAI,sBAAOA,GAAP,CAAa,IAAIpB,EAAMC,EAAKqB,QAElCnB,KAAKoB,SAAS,CAAEd,OAAQW,IAExBI,SAASC,cAAc,KAAKC,UAhDJ,oBAoD1B,WAAU,IAAD,OACP,OACE,qCACE,uBAAMC,SAAU,SAACV,GAAD,OAAO,EAAKP,iBAAiBO,IAA7C,UACE,uBACEW,KAAK,OACLC,MAAO1B,KAAKI,MAAMC,UAClBsB,SAAU,SAACb,GACT,EAAKM,SAAS,CAAEf,UAAWS,EAAEc,OAAOF,WAGxC,uBAAOD,KAAK,SAASC,MAAM,qBAE7B,cAAC,IAAD,CACAG,MAAM,GACNC,SAAS,cACTC,WAAY,kBAAM,EAAKC,sBApEH,GAGJC,IAAMC,WAsF5B,OACE,mCACA,cAAChC,EAAD,MClGNiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASiB,eAAe,W","file":"static/js/main.7ce9a7e1.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, {  } from \"react\";\nimport DownloadLink from \"react-download-link\";\n\nclass Coord {\n  constructor(lat, lon) {\n    this.lat = lat;\n    this.lon = lon;\n  }\n}\n\nexport default function App() {\n  /* <Components/> */\n    \n  class QuestForm extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { inputText: \"\", coords: [] };\n      \n      this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    }\n    \n    createGpx () {\n      let stringFile = \"\";\n      stringFile += '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\\n';\n      stringFile += \"<gpx>\\n\";\n      stringFile += \"<trk>\\n\";\n      stringFile += \"<trkseg>\\n\";\n      \n      const temp = [...this.state.coords]\n      \n      temp.forEach((i) => {\n        stringFile += `<trkpt lat=\"${i.lat}\" lon=\"${i.lon}\"></trkpt>\\n`;\n      });\n      \n      stringFile += `</trkseg>\\n`;\n      stringFile += `</trk>\\n`;\n      stringFile += `</gpx>\\n`;\n      return stringFile;\n    }\n\n    getCoords () {\n      const coordRegex = /[0-9]{1,3}\\.[0-9]{3,14},.[0-9]{0,3}\\.[0-9]{3,14}/g\n      const text = this.state.inputText\n      return [...text.matchAll(coordRegex)]\n    }\n\n    handleFormSubmit(e) {\n      e.preventDefault();\n      \n      const coords = this.getCoords()\n      let temp = []\n      \n      coords.forEach(i => {\n        const [lat, lng] = i[0].split(\",\")\n        temp = [...temp, new Coord(lat, lng)]\n      })\n      this.setState({ coords: temp })\n\n      document.querySelector(\"a\").click();\n    }\n    \n    \n    render() {\n      return (\n        <>\n          <form onSubmit={(e) => this.handleFormSubmit(e)}>\n            <input\n              type=\"text\"\n              value={this.state.inputText}\n              onChange={(e) => {\n                this.setState({ inputText: e.target.value });\n              }}\n              />\n            <input type=\"submit\" value=\"Get .gpx file\" />\n          </form>\n          <DownloadLink\n          label=\"\"\n          filename=\"pokemon.gpx\"\n          exportFile={() => this.createGpx()}\n          />\n        </>\n      );\n    }\n  }\n  \n  /* <Components/> */\n  \n  \n  /* Functions */\n  // const copyToClipboard = (text) => {\n    //   let textField = document.createElement('textarea')\n    //   textField.innerText = text\n    //   document.body.appendChild(textField)\n    //   textField.select()\n    //   document.execCommand('copy')\n    //   textField.remove()\n    \n    // }\n    \n    return (\n      <>\n      <QuestForm />\n      \n      {/* <button onClick={ e => console.log(coords) }>Print coords</button> */}\n    </>\n  );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}