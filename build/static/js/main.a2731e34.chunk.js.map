{"version":3,"sources":["App.jsx","index.js"],"names":["dusts","distance","coord1","coord2","a","unit","split","lat1","lon1","lat2","lon2","parseFloat","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","fetchNoCors","url","fetch","encodeURIComponent","res","json","data","quests","invasions","console","error","sortCoords","pop","list","index","popped","temp","length","i","Error","log","done","filter","coord","chose","obj","lat","lng","at","elemDist","indexOf","questCreateGpx","coords","stringFile","forEach","GetQuest","props","state","quest","fileDownloadUrl","handleSelectCity","bind","handleSelectQuest","this","alert","final","includes","conditions_string","fileDownload","Blob","e","debug","target","value","setState","err","className","name","onChange","hidden","uuidv4","urls","map","domain","style","fontFamily","rewards","label","category","j","literal","reward","onClick","handleGetQuest","React","Component","GetTimeZones","date","Date","setInterval","forceUpdate","toLocaleString","timeZone","time_zone","hour12","GetGrunts","city","character_id","grunts","handleSubmit","fetchGrunts","character","toString","id","grunt_type","ConvertToGpx","inputText","handleFormSubmit","parseCoords","lon","text","matchAll","preventDefault","downloadFile","onSubmit","type","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2731e34.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { rewards, urls, grunts } from \"./bundle.json\";\nimport fileDownload from \"js-file-download\";\nimport { v4 as uuidv4 } from 'uuid';\n\nlet dusts = [\"Make 3 Great Throws in a row\", \"Make 2 Nice Curveball Throws in a row\", \"Make 5 Nice Throws\", \"Make 3 Great Throws\", \"Make 3 Nice Throws in a row\", \"Make an Excellent Throw\", \"\"]\n\nasync function distance(coord1, coord2, unit = \"K\") {\n  let [lat1, lon1] = coord1.split(\",\");\n  let [lat2, lon2] = coord2.split(\",\");\n  lat1 = parseFloat(lat1);\n  lon1 = parseFloat(lon1);\n  lat2 = parseFloat(lat2);\n  lon2 = parseFloat(lon2);\n\n  if (lat1 === lat2 && lon1 === lon2) {\n    return 0;\n  } else {\n    var radlat1 = (Math.PI * lat1) / 180;\n    var radlat2 = (Math.PI * lat2) / 180;\n    var theta = lon1 - lon2;\n    var radtheta = (Math.PI * theta) / 180;\n    var dist =\n      Math.sin(radlat1) * Math.sin(radlat2) +\n      Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n    if (dist > 1) {\n      dist = 1;\n    }\n    dist = Math.acos(dist);\n    dist = (dist * 180) / Math.PI;\n    dist = dist * 60 * 1.1515;\n    if (unit === \"K\") {\n      dist = dist * 1.609344;\n    }\n    if (unit === \"N\") {\n      dist = dist * 0.8684;\n    }\n    return dist;\n  }\n}\nasync function fetchNoCors(url) {\n  try {\n    // https://pokemon-api-327709.appspot.com/\n    // localhost:2000/\n\n    let res = await fetch(\n      `https://pokemon-api-327709.appspot.com/${encodeURIComponent(url)}`\n    );\n    // console.log(`https://pokemon-api-327709.appspot.com/${encodeURIComponent(url)}`);\n    res = await res.json();\n    return res.data.quests || res.data.invasions;\n  } catch (err) {\n    console.error(err + \" fetchQuest()\");\n  }\n}\n\nasync function sortCoords(quests) {\n  function pop(list, index) {\n    let temp = [];\n    let popped;\n    if (index === -1) {\n      index = list.length - 1;\n    }\n\n    for (let i = 0; i < list.length; i++) {\n      if (i !== index) {\n        temp = [...temp, list[i]];\n      } else {\n        popped = list[i];\n      }\n    }\n    if (!popped)\n      throw new Error(\n        `index not valid. sortCoords.pop() actual length: ${quests.length}, index given: ${index}`\n      );\n    return [temp, popped];\n  }\n\n  if (quests.length === 0) {\n    console.error(\"No quests specified, quest list empty. sortCoords()\")\n    console.log(quests)\n    return quests\n  };\n\n  let done = [];\n  let popped;\n\n  [quests, popped] = pop(quests, 0);\n  done[0] = popped;\n\n  quests = quests.filter((i) => i !== popped);\n\n  let coord = [];\n\n  while (quests.length > 0) {\n    let temp = [{ chose: null }];\n    let dist = 1000000000;\n    let obj = null;\n    for (let i of quests) {\n      let elemDist = await distance(\n        i.lat + \",\" + i.lng,\n        done.at(-1).lat + \",\" + done.at(-1).lng\n      );\n      temp = [...temp, elemDist];\n\n      if (elemDist < dist) {\n        temp[0].chose = elemDist;\n        dist = elemDist;\n        obj = i;\n      }\n    }\n    coord = [...coord, temp];\n\n    [quests, popped] = pop(quests, quests.indexOf(obj));\n    done = [...done, popped];\n  }\n  return done;\n}\n\nfunction questCreateGpx(coords) {\n  let stringFile = \"\";\n  stringFile += '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\\n';\n  stringFile += \"<gpx>\\n\";\n  stringFile += \"<trk>\\n\";\n  stringFile += \"<trkseg>\\n\";\n\n  coords.forEach((i) => {\n    stringFile += `<trkpt lat=\"${parseFloat(i.lat)}\" lon=\"${parseFloat(\n      i.lng\n    )}\"></trkpt>\\n`;\n  });\n\n  stringFile += `</trkseg>\\n`;\n  stringFile += `</trk>\\n`;\n  stringFile += `</gpx>\\n`;\n  return stringFile;\n}\n\n// fetch(\"https://cors-anywhere.herokuapp.com/https://nycpokemap.com/quests.php\", { \"x-requested-with\": \"fetch\" })\n// components\nclass GetQuest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      url: \"\",\n      quest: \"\",\n      fileDownloadUrl: \"\",\n    };\n\n    this.handleSelectCity = this.handleSelectCity.bind(this);\n    this.handleSelectQuest = this.handleSelectQuest.bind(this);\n  }\n\n\n  async handleGetQuest() {\n    try {\n      if (this.state.url === \"\" || this.state.quest === \"\") {\n        alert(!this.state.url ? \"Select a city!\" : \"Select a quest type!\");\n      } else {\n        let res = await fetchNoCors(this.state.url + \"/quests.php?\" + this.state.quest)\n        let final = res;\n        if (\n          [\n            \"quests[]=12%2C0%2C3\",\n            \"quests[]=12%2C0%2C6\",\n            \"quests[]=12%2C0%2C9\",\n            \"quests[]=12%2C0%2C15\",\n            \"quests[]=12%2C0%2C18\",\n          ].includes(this.state.quest)\n        ) {\n  \n          final = final.filter(\n            i => i.conditions_string === \"Power up Pokémon 5 times\"\n          );\n        } else if(this.state.quest === \"quests[]=3%2C200%2C0&quests[]=3%2C500%2C0&quests[]=3%2C1000%2C0&quests[]=3%2C1500%2C0\") {\n          final = final.filter(\n            i => dusts.includes(i.conditions_string)\n          )\n        } else if(this.state.quest === \"quests[]=12%2C0%2C80\") {\n          final = final.filter(\n            i => i.conditions_string === \"Use 10 supereffective Charged Attacks\"\n          );\n        } else if(this.state.quest === \"quests[]=12%2C0%2C94\") {\n          final = final.filter(\n            i => i.conditions_string === \"Use 10 supereffective Charged Attacks\"\n          )\n        }\n          fileDownload(new Blob([questCreateGpx(final)]), \"quest.gpx\");\n      }  \n    } catch(err) {\n      console.error(`An error occurred. \"${ err }\". handleGetQuest()`)\n    }\n  };\n\n  async handleSelectCity (e, debug=false) {\n    try {\n      if (debug) {\n        alert(`Selected ${e.target.value}`);\n      }\n  \n      this.setState({ url: e.target.value });\n    } catch(err) {\n      console.error(`An error occurred: ${err}. handleSelectCity()`)\n    }\n  }\n\n  async handleSelectQuest(e, debug=false) {\n    try {\n      if (debug) {\n        alert(`Selected ${e.target.value}`);\n      }\n      this.setState({ quest: e.target.value });\n    } catch(err) {\n      console.error(`An error occurred: ${err}. handleSelectCity()`)\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"quest-select-container\" key={uuidv4()}>\n        {/* Select city */}\n        <select\n          name=\"city-name\"\n          className=\"select-quest city\"\n          value={this.state.url}\n          onChange={this.handleSelectCity}\n          key={uuidv4()}\n        >\n          <option value=\"\" hidden key={uuidv4()}>\n            🏙City🏙\n          </option>\n          {urls.map((i) => {\n            return (\n              <>\n                <option\n                  className=\"option-url\"\n                  value={i.domain}\n                  key={uuidv4()}\n                  style={{ fontFamily: \"sans-serif\" }}\n                >\n                  {i.name}\n                </option>\n              </>\n            );\n          })}\n        </select>\n\n        {/* Select quest */}\n        <select\n          key={uuidv4()}\n          name=\"quest-url\"\n          className=\"select-quest quest\"\n          value={this.state.quest}\n          onChange={this.handleSelectQuest}\n        >\n          <option value=\"\" hidden key={uuidv4()}>\n            🗺️Quest🗺️\n          </option>\n          {rewards.map((i) => {\n            return (\n              <optgroup label={i.category} key={uuidv4()}>\n                {i.rewards.map((j) => {\n                  return (\n                    <option\n                      value={j.literal}\n                      key={uuidv4()}\n                      style={{ fontFamily: \"sans-serif\" }}\n                    >\n                      {j.reward}\n                    </option>\n                  );\n                })}\n              </optgroup>\n            );\n          })}\n        </select>\n        <button className=\"button-quest\" onClick={ this.handleGetQuest } key={uuidv4()}>\n          Get quest.gpx\n        </button>\n      </div>\n    );\n  }\n}\n\nclass GetTimeZones extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.date = new Date()\n  }\n\n  componentDidMount() {\n    console.log(\"Mounted, started displaying current time\")\n    setInterval(() => {\n      this.forceUpdate()\n    \n    }, 1000)\n  }\n\n\n\n  render() {\n    return(\n    <>\n      <div className={\"timezones\"}>\n        { urls.map(i => {\n          let date = new Date()\n          return (\n            <p key={uuidv4()}>{ `${i.name} ${date.toLocaleString(\"en-CA\", { timeZone: i.time_zone, hour12: true })}` }</p>\n        \n          )\n        \n            }) }\n      </div>\n    </>\n    )\n  }\n}\n\nclass GetGrunts extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { city: urls[0].domain, character_id: grunts[0].character_id }\n    \n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  async fetchGrunts() {\n    try {\n      const url = \"\" + this.state.city + \"/pokestop.php\"\n      let res = await fetchNoCors(url)\n\n      return res\n    } catch(err) {\n      console.log(`Error occurred. \"${ err } fethGrunts()\"`)\n    }\n  }\n  async handleSubmit() {\n    try {\n      let res = await this.fetchGrunts()\n      res = res.filter(i => i.character.toString() === this.state.character_id.toString())\n  \n      res = questCreateGpx(await sortCoords(res))\n  \n      fileDownload(new Blob([res]), \"grunts.gpx\")\n    } catch(err) {\n      console.error(`Error occurred. \"${ err }\". handleSubmit()`)\n    }\n  }\n  \n  render() {\n    return(\n      <>\n      <select name=\"grunt-select-city\" id=\"grunt-select-city\" onChange={ e => this.setState({ city: e.target.value })  } value={ this.state.city }>\n        { urls.map(i => {\n          return(\n            <option value={ i.domain } key={ uuidv4() } >{ i.name }</option>\n          )\n        }) }\n      </select>\n      <select name=\"grunt-select-type\" id=\"grunt-select-type\" onChange={ e => this.setState({ character_id: e.target.value }) } value={ this.state.character_id }>\n        { grunts.map(i => {\n          return(\n            <option value={ i.character_id } key={ uuidv4() }>{ i.grunt_type }</option>\n          )\n        }) }\n\n\n      </select>\n      <button\n        onClick={ this.handleSubmit }\n      >\n        Get grunt.gpx\n      </button>\n      </>\n    )\n\n\n  }\n\n\n\n}\n\n\n\nclass ConvertToGpx extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { inputText: \"\", fileDownloadUrl: \"\" };\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  createGpx(temp = this.parseCoords(this.state.inputText)) {\n    let stringFile = \"\";\n    stringFile += '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\\n';\n    stringFile += \"<gpx>\\n\";\n    stringFile += \"<trk>\\n\";\n    stringFile += \"<trkseg>\\n\";\n\n    temp.forEach((i) => {\n      let [lat, lon] = i[0].split(\",\");\n\n      stringFile += `<trkpt lat=\"${parseFloat(lat)}\" lon=\"${parseFloat(\n        lon\n      )}\"></trkpt>\\n`;\n    });\n\n    stringFile += `</trkseg>\\n`;\n    stringFile += `</trk>\\n`;\n    stringFile += `</gpx>\\n`;\n    return stringFile;\n  }\n\n  parseCoords() {\n    const coordRegex = /[0-9]{1,3}\\.[0-9]{3,14},.[0-9]{0,3}\\.[0-9]{3,14}/g;\n    const text = this.state.inputText;\n    return [...text.matchAll(coordRegex)];\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n\n    this.downloadFile();\n  }\n\n  render() {\n    return (\n      <>\n        <form onSubmit={(e) => this.handleFormSubmit(e)} className=\"gpx-form\">\n          <input\n            type=\"text\"\n            value={this.state.inputText}\n            onChange={(e) => {\n              this.setState({ inputText: e.target.value });\n            }}\n          />\n          <input type=\"submit\" value=\"Get .gpx file\" className=\"gpx-submit\" />\n        </form>\n      </>\n    );\n  }\n}\n// component\n\nexport default function App() {\n  /* Functions */\n  // const copyToClipboard = (text) => {\n  //   let textField = document.createElement('textarea')\n  //   textField.innerText = text\n  //   document.body.appendChild(textField)\n  //   textField.select()\n  //   document.execCommand('copy')\n  //   textField.remove()\n  // }\n\n  return (\n    <>\n      <ConvertToGpx />\n      <GetQuest />\n      <GetTimeZones />\n      <GetGrunts />\n\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}